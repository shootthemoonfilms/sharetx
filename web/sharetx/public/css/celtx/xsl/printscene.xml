<?xml version="1.0" encoding="UTF-8"?>

<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version="1.0">

  <xsl:output method="html"
              version="4.0"/>

  <xsl:param name="production"></xsl:param>

  <xsl:template match="/scene">
    <html>
      <head>
        <title><xsl:value-of select="$production"/></title>
        <style type="text/css">
body {
  font-family:georgia, helvetica, arial;
  font-size: 14px;
  background:white;
}

tr:first-child {
  font-weight:bold;
}

table {
  font-size:14px;
  margin-bottom: 10px;
}

h2, h3 {
  border-bottom: 2px solid black;
}

.tableDiv {
  min-height: 120px;
}

td.category {
  width:33%;
}
        </style>
      </head>
      <body>
        <h2><xsl:value-of select="$production"/></h2>
        <table width="100%">
          <tr>
            <td>Scene #</td>
            <td>INT/EXT</td>
            <td>Setting</td>
            <td>DAY/NIGHT</td>
          </tr>
          <tr>
            <td><xsl:value-of select="@ordinal"/></td>
            <td><xsl:value-of select="@intext"/></td>
            <td><xsl:value-of select="@title"/></td>
            <td><xsl:value-of select="@daynight"/></td>
          </tr>
        </table>
        <p>
          <b>Set:</b><br />
          <xsl:value-of select="@location"/>
        </p>
        <p>
          <b>Scene Notes:</b><br />
          <xsl:value-of select="@comments"/>
        </p>
        <h3>Categories</h3>
        <xsl:apply-templates select="category[position() mod 3 = 1]"/>
      </body>
    </html>
  </xsl:template>

  <xsl:template match="category">
    <xsl:variable name="second"
                  select="following-sibling::category[position() = 1]"/>
    <xsl:variable name="third"
                  select="following-sibling::category[position() = 2]"/>
    <div class="tableDiv">
      <table width="100%">
        <tr>
          <td class="category"><xsl:value-of select="@title"/></td>
          <xsl:choose>
            <xsl:when test="$second">
              <td class="category"><xsl:value-of select="$second/@title"/></td>
            </xsl:when>
            <xsl:otherwise>
              <td class="category"> </td>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="$third">
              <td class="category"><xsl:value-of select="$third/@title"/></td>
            </xsl:when>
            <xsl:otherwise>
              <td class="category"> </td>
            </xsl:otherwise>
          </xsl:choose>
        </tr>
        <tr>
          <td class="category"><xsl:apply-templates select="item"/></td>
          <xsl:choose>
            <xsl:when test="$second">
              <td class="category">
                <xsl:apply-templates select="$second/item"/>
              </td>
            </xsl:when>
            <xsl:otherwise>
              <td class="category"> </td>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="$third">
              <td class="category">
                <xsl:apply-templates select="$third/item"/>
              </td>
            </xsl:when>
            <xsl:otherwise>
              <td class="category"> </td>
            </xsl:otherwise>
          </xsl:choose>
        </tr>
      </table>
    </div>
  </xsl:template>

  <xsl:template match="item">
    <xsl:value-of select="@title"/>
    <br/>
  </xsl:template>

</xsl:stylesheet>
