<?xml version="1.0"?>

<!--
/* ***** BEGIN LICENCE BLOCK *****
 * Version: CePL 1.1
 * 
 * The contents of this file are subject to the Celtx Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.celtx.com/CePL/
 * 
 * Software distributed under the License is distributed on an "AS IS"
 * basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See
 * the License for the specific language governing rights and limitations
 * under the License.
 * 
 * The Original Code is Celtx Script Manager.
 * 
 * The Initial Developer of the Original Code is Chad House and 4067479
 * Canada Inc. t/a CELTX.
 * 
 * Portions created by Chad House are Copyright (C) 2000-2004 Chad House,
 * parts created by Celtx are Copyright (C) 4067479 Canada Inc. All Rights
 * Reserved.
 * 
 * Contributor(s):
 *
 ***** END LICENCE BLOCK ***** */
-->

<?xml-stylesheet href="chrome://global/skin/global.css"?>
<?xml-stylesheet href="chrome://mozapps/content/preferences/preferences.css"?>
<?xml-stylesheet href="chrome://celtx/skin/preferences.css"?>

<!DOCTYPE prefwindow [

<!ENTITY % baseMenuOverlayDTD SYSTEM
          "chrome://celtxapp/locale/baseMenuOverlay.dtd">
%baseMenuOverlayDTD;
<!ENTITY % browserDTD SYSTEM "chrome://celtxapp/locale/browser.dtd" >
%browserDTD;
<!ENTITY % celtxDTD SYSTEM "chrome://celtx/locale/celtx.dtd" >
%celtxDTD;
]>

<prefwindow id="CeltxPreferences"
            type="prefwindow"
            style="width: 56em; height: 36em;"
            ondialogaccept="return accepted();"
            ondialogcancel="return canceled();"
            xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

  <script type="application/x-javascript"
          src="chrome://celtx/content/util.js"/>
  <script type="application/x-javascript"
          src="chrome://celtx/content/rdfutils.js"/>
  <script type="application/x-javascript"
          src="chrome://celtx/content/guiutils.js"/>
  <script type="application/x-javascript">
<![CDATA[
// There's a problem loading prefpanes where the overlay does not finish
// loading before the onpaneload event is sent. See Mozilla bug 392515:
// https://bugzilla.mozilla.org/show_bug.cgi?id=392515

// To work around this, we include a script inline that gets called by
// the onpaneload event, and that script loads the separate Javascript file
// and calls its load handler. This is a convenience function that prefpanes
// can use to accomplish that. Given a name for a prefpane, it generates the
// name of a script to load and a callback from that script to call:
// script uri: chrome://celtx/content/prefs/<name>.js
// callback: <name>Loaded()
function loadPrefPaneScript(name) {
  var jsloader = Components.classes["@mozilla.org/moz/jssubscript-loader;1"]
    .getService(Components.interfaces.mozIJSSubScriptLoader);
  jsloader.loadSubScript("chrome://celtx/content/prefs/" + name + ".js");
  var callback = name + "Loaded";
  if (callback in window)
    window[callback]();
}

// If you try to include util.js in the prefwindow and in a prefpane,
// everything breaks. If you just include it in the prefwindow, the prefpane
// that expects it breaks (and thus everything breaks). Maybe that's not
// the case if the prefpane is loaded from an external file.

var kPrefsFileName = "celtx_prefs.rdf";

function getPrefDS () {
  var rdfsvc = Components.classes["@mozilla.org/rdf/rdf-service;1"]
    .getService(Components.interfaces.nsIRDFService);
  var dirsvc = Components.classes["@mozilla.org/file/directory_service;1"]
    .getService(Components.interfaces.nsIProperties);
  var rdfsrc = dirsvc.get("ProfD", Components.interfaces.nsIFile);
  rdfsrc.append(kPrefsFileName);
  var ios = Components.classes["@mozilla.org/network/io-service;1"]
    .getService(Components.interfaces.nsIIOService);
  var ds = rdfsvc.GetDataSourceBlocking(ios.newFileURI(rdfsrc).spec);
  ds = ds.QueryInterface(Components.interfaces.nsIRDFRemoteDataSource);
  return ds;
}

function accepted () {
  var ds = getPrefDS();
  ds.Flush();
  return true;
}

function canceled () {
  var ds = getPrefDS();
  ds.Refresh(true);
  return true;
}
]]>
  </script>
  <prefpane id="paneGeneral"
            label="&general.label;"
            src="chrome://celtx/content/prefs/general.xul"/>
  <prefpane id="paneCategories"
            label="&categories.label;"
            src="chrome://celtx/content/prefs/categories.xul"/>
  <prefpane id="paneScript"
            label="&script.label;"
            src="chrome://celtx/content/prefs/script.xul"/>
  <prefpane id="paneCalendar"
            label="&schedule.label;"
            src="chrome://celtx/content/prefs/calendar.xul"/>
  <prefpane id="panePrivacy"
            label="&privacy.label;"
            src="chrome://celtx/content/prefs/privacy.xul"/>
  <prefpane id="paneNetwork"
            label="&network.label;"
            src="chrome://celtx/content/prefs/network.xul"/>
</prefwindow>
